{
    "patches": [
        {
            "label": "2025-10-04_16-41-54",
            "content": "@@ -18,23 +18,20 @@\n def \n-_\n _init_\n-_\n (self,\n- \n colo\n@@ -37,17 +37,16 @@\n or: str,\n- \n size: st\n@@ -67,16 +67,21 @@\n lf.color\n+: str\n  = color\n@@ -98,16 +98,21 @@\n elf.size\n+: str\n  = size%0A\n@@ -123,32 +123,37 @@\n     self.wetness\n+: int\n  = 0%0A%0A    def dr\n@@ -159,17 +159,16 @@\n ry(self,\n- \n amount: \n@@ -171,17 +171,16 @@\n nt: int)\n- \n -%3E None:\n@@ -373,16 +373,8 @@\n elf)\n- -%3E bool\n :%0A  \n@@ -435,16 +435,8 @@\n elf)\n- -%3E None\n :%0A  \n@@ -545,34 +545,32 @@\n turn 10%0A        \n-el\n if self.size == \n@@ -604,18 +604,16 @@\n         \n-el\n if self.\n@@ -664,25 +664,24 @@\n eturn 0%0A\n-%0A\n     def \n __str__(\n@@ -676,15 +676,13 @@\n def \n-_\n _str_\n-_\n (sel\n@@ -713,17 +713,16 @@\n n f%22Cor:\n- \n %7Bself.co\n@@ -788,32 +788,39 @@\n ain():%0A    towel\n+: Towel\n  = Towel(%22%22, %22%22)\n@@ -819,18 +819,12 @@\n (%22%22,\n- \n %22%22)%0A\n-    %0A\n     \n@@ -835,16 +835,17 @@\n e True:%0A\n+%0A\n         \n@@ -848,16 +848,21 @@\n     line\n+: str\n  = input\n@@ -876,70 +876,66 @@\n     \n-args = line.split()%0A%0A        if not args:%0A            continue\n+print(%22$%22 + line)%0A        args: list%5Bstr%5D = line.split(%22%22)\n %0A%0A  \n@@ -1028,47 +1028,17 @@\n     \n-if len(args) %3E= 3:%0A                colo\n+color: st\n r = \n@@ -1061,16 +1061,17 @@\n     \n-    \n size\n+: str\n  = a\n@@ -1077,20 +1077,16 @@\n args%5B2%5D%0A\n-    \n         \n@@ -1113,100 +1113,14 @@\n lor,\n- \n size)%0A\n-            else:%0A                print(%22fail: par%C3%A2metros insuficientes para criar%22)%0A\n     \n@@ -1314,47 +1314,17 @@\n     \n-if len(args) %3E= 2:%0A                amou\n+amount: i\n nt =\n@@ -1345,28 +1345,24 @@\n             \n-    \n towel.dry(am\n@@ -1371,82 +1371,8 @@\n nt)%0A\n-            else:%0A                print(%22fail: quantidade n%C3%A3o informada%22)%0A\n     \n@@ -1498,9 +1498,8 @@\n %0A%0Amain()\n-%0A\n",
            "lines": "56"
        },
        {
            "label": "2025-10-04_16-44-10",
            "content": "@@ -814,20 +814,29 @@\n towel = \n-None\n+Towel(%22%22, %22%22)\n %0A    %0A  \n@@ -876,34 +876,8 @@\n t()%0A\n-        print(f%22$%7Bline%7D%22)%0A\n     \n@@ -956,45 +956,18 @@\n     \n-command = args%5B0%5D%0A%0A        if command\n+if args%5B0%5D\n  == \n@@ -1000,31 +1000,31 @@\n        elif \n-command\n+args%5B0%5D\n  == %22criar%22:\n@@ -1263,394 +1263,114 @@\n lif \n-command == %22mostrar%22:%0A            if towel:%0A                print(towel)%0A            else:%0A                print(%22fail: nenhuma toalha criada%22)%0A        elif command == %22seca%22:%0A            if towel:%0A                print(%22sim%22 if towel.isDry() else %22nao%22)%0A            else:%0A                print(%22fail: nenhuma toalha criada%22)%0A        elif command == %22torcer%22:%0A            if towel:%0A    \n+args%5B0%5D == %22seca%22:%0A            print(%22sim%22 if towel.isDry() else %22nao%22)%0A        elif args%5B0%5D == %22torcer%22:%0A\n     \n@@ -1406,91 +1406,20 @@\n     \n- \n-   else:%0A                print(%22fail: nenhuma toalha criada%22)%0A        elif command\n+elif args%5B0%5D\n  == \n@@ -1433,34 +1433,8 @@\n r%22:%0A\n-            if towel:%0A    \n     \n@@ -1460,20 +1460,16 @@\n ) %3E= 2:%0A\n-    \n         \n@@ -1510,28 +1510,24 @@\n             \n-   \n- \n towel.dry(am\n@@ -1536,36 +1536,32 @@\n nt)%0A            \n-    \n else:%0A          \n@@ -1558,36 +1558,32 @@\n                 \n-  \n-  \n print(%22fail: qua\n@@ -1610,37 +1610,51 @@\n a%22)%0A        \n-    else:%0A   \n+elif args%5B0%5D == %22mostrar%22:%0A\n             \n@@ -1657,44 +1657,19 @@\n     \n- \n print(\n-%22fail: nenhuma toalha criada%22\n+towel\n )%0A  \n",
            "lines": "65"
        },
        {
            "label": "2025-10-04_16-45-21",
            "content": "class Towel:\n    def __init__(self, color: str, size: str):\n        self.color = color\n        self.size = size\n        self.wetness = 0\n\n    def dry(self, amount: int) -> None:\n        self.wetness += amount\n        if self.wetness >= self.isMaxWetness():\n            self.wetness = self.isMaxWetness()\n            print(\"toalha encharcada\")\n    \n    def isDry(self) -> bool:\n        return self.wetness == 0\n    \n    def wringOut(self) -> None:\n        self.wetness = 0\n\n    def isMaxWetness(self) -> int:\n        if self.size == \"P\":\n            return 10\n        elif self.size == \"M\":\n            return 20\n        elif self.size == \"G\":\n            return 30\n        return 0\n\n    def __str__(self) -> str:\n        return f\"Cor: {self.color}, Tamanho: {self.size}, Umidade: {self.wetness}\"\n\ndef main():\n    towel = None\n    \n    while True:\n        line = input()\n        print(f\"${line}\")\n        args = line.split()\n\n        if not args:\n            continue\n\n        command = args[0]\n\n        if command == \"end\":\n            break\n        elif command == \"criar\":\n            if len(args) >= 3:\n                color = args[1]\n                size = args[2]\n                towel = Towel(color, size)\n            else:\n                print(\"fail: par\u00e2metros insuficientes para criar\")\n        elif command == \"mostrar\":\n            if towel:\n                print(towel)\n            else:\n                print(\"fail: nenhuma toalha criada\")\n        elif command == \"seca\":\n            if towel:\n                print(\"sim\" if towel.isDry() else \"nao\")\n            else:\n                print(\"fail: nenhuma toalha criada\")\n        elif command == \"torcer\":\n            if towel:\n                towel.wringOut()\n            else:\n                print(\"fail: nenhuma toalha criada\")\n        elif command == \"enxugar\":\n            if towel:\n                if len(args) >= 2:\n                    amount = int(args[1])\n                    towel.dry(amount)\n                else:\n                    print(\"fail: quantidade n\u00e3o informada\")\n            else:\n                print(\"fail: nenhuma toalha criada\")\n        else:\n            print(\"fail: comando n\u00e3o encontrado\")\n\nmain()\n",
            "lines": "80"
        }
    ]
}