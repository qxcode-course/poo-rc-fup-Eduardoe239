{
    "patches": [
        {
            "label": "2025-10-04_17-07-05",
            "content": "@@ -0,0 +1,1713 @@\n+class Carro:%0A    def __init__(self, passa: int = 0, gas: int = 0, km: int = 0):%0A        self.passa = passa%0A        self.gas = gas%0A        self.km = km%0A%0A    def __str__(self) -%3E str:%0A        return f%22pass: %7Bself.passa%7D, gas: %7Bself.gas%7D, km: %7Bself.km%7D%22%0A    %0A    def maxPassa(self):%0A        if self.passa %3C 2:%0A            self.passa += 1%0A        else:%0A            print(%22fail: limite de pessoas atingido%22)%0A%0A    def leave(self):%0A        if self.passa == 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A        else:%0A            self.passa -= 1%0A    %0A    def gasMax(self, increment: int):%0A        self.gas += increment%0A        if self.gas %3E 100:%0A            self.gas = 100%0A    %0A    def drive (self, distance: int):%0A        if self.passa == 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A        elif self.gas == 0:%0A            print(%22fail: tanque vazio%22)%0A        else:%0A            if distance %3E self.gas:%0A                print(f%22fail: tanque vazio apos andar %7Bself.gas%7D km%22)%0A                self.km += self.gas%0A                self.gas = 0%0A            else:%0A                self.km += distance%0A                self.gas -= distance%0A%0A%0Adef main():%0A    carro = Carro()%0A%0A    while True:%0A        line = input()%0A        print(%22$%22 + line)%0A        args = line.split(%22%22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22enter%22:%0A            carro.maxPassa()%0A        elif args%5B0%5D == %22show%22:%0A            print(%22carro%22)%0A        elif args%5B0%5D == %22leave%22:%0A            carro.leave()%0A        elif args%5B0%5D == %22fuel%22:%0A            increment = int(args%5B1%5D)%0A            carro.gasMax(increment)%0A        elif args%5B0%5D == %22drive%22:%0A            increment = int(args%5B1%5D)%0A            carro.drive(increment)%0A%0Amain()\n",
            "lines": "65"
        },
        {
            "label": "2025-10-06_00-32-09",
            "content": "@@ -1,1356 +0,0 @@\n-class Animal:%0A    def __init__(self, specie: str, sound: str):  # construtor%0A        self.specie: str = specie%0A        self.sound: str = sound%0A        self.age: int = 0%0A%0A    def __str__(self) -%3E str:  # toString%0A        return f%22%7Bself.specie%7D:%7Bself.age%7D:%7Bself.sound%7D%22%0A%0A    def ageBy(self, increment: int) -%3E None:%0A        if self.age == 4:%0A            print(f%22warning: %7Bself.specie%7D morreu%22)%0A            return%0A%0A        self.age += increment%0A        if self.age %3E= 4:%0A            self.age = 4%0A            print(f%22warning: %7Bself.specie%7D morreu%22)%0A%0A    def makeSound(self) -%3E str:%0A        if self.age == 0:%0A            return %22---%22%0A        elif self.age %3C 4:%0A            return self.sound%0A        else:%0A            return %22RIP%22%0A%0A%0Adef main():%0A    animal: Animal = Animal(%22%22, %22%22)%0A    while True:%0A        line: str = input()%0A        print(%22$%22 + line)%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22init%22:%0A            specie: str = args%5B1%5D%0A            sound: str = args%5B2%5D%0A            animal = Animal(specie, sound)%0A        elif args%5B0%5D == %22show%22:%0A            print(animal)%0A        elif args%5B0%5D == %22grow%22:%0A            increment: int = int(args%5B1%5D)%0A            animal.ageBy(increment)%0A        elif args%5B0%5D == %22noise%22:%0A            print(animal.makeSound())%0A%0A%0Aif __name__ == %22__main__%22:%0A    main()%0A\n",
            "lines": "0"
        },
        {
            "label": "2025-10-06_00-37-34",
            "content": "class Animal:\n    def __init__(self, specie: str, sound: str):  # construtor\n        self.specie: str = specie\n        self.sound: str = sound\n        self.age: int = 0\n\n    def __str__(self) -> str:  # toString\n        return f\"{self.specie}:{self.age}:{self.sound}\"\n\n    def ageBy(self, increment: int) -> None:\n        if self.age == 4:\n            print(f\"warning: {self.specie} morreu\")\n            return\n\n        self.age += increment\n        if self.age >= 4:\n            self.age = 4\n            print(f\"warning: {self.specie} morreu\")\n\n    def makeSound(self) -> str:\n        if self.age == 0:\n            return \"---\"\n        elif self.age < 4:\n            return self.sound\n        else:\n            return \"RIP\"\n\n\ndef main():\n    animal: Animal = Animal(\"\", \"\")\n    while True:\n        line: str = input()\n        print(\"$\" + line)\n        args: list[str] = line.split(\" \")\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"init\":\n            specie: str = args[1]\n            sound: str = args[2]\n            animal = Animal(specie, sound)\n        elif args[0] == \"show\":\n            print(animal)\n        elif args[0] == \"grow\":\n            increment: int = int(args[1])\n            animal.ageBy(increment)\n        elif args[0] == \"noise\":\n            print(animal.makeSound())\n\n\nif __name__ == \"__main__\":\n    main()\n",
            "lines": "52"
        }
    ]
}